receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 127.0.0.1:4317
      http:
        endpoint: 127.0.0.1:4318

  hostmetrics:
    collection_interval: 10s
    scrapers:
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      load:
        cpu_average: true
      network:
        exclude:
          match_type: regexp
          interfaces:
            - lo
            - flannel.*
            - cali.*
            - tunl.*
            - vxlan.calico
            - vxlan-v6.calico
            - wireguard.cali
            - wg-v6.cali

  hostmetrics/disk:
    root_path: /
    collection_interval: 1m
    scrapers:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
        exclude_mount_points:
          match_type: regexp
          mount_points:
            - "/var/lib/docker.*"
            - "/var/lib/kubelet.*"
        exclude_fs_types:
          match_type: strict
          fs_types:
            - "tmpfs"
            - "devtmpfs"
            - "overlay"

exporters:
  debug/verbosity:
    verbosity: detailed
  otlp:
    endpoint: "https://observation.genkey.com:4317"
    headers:
      authorization: "Bearer ${env:GENKEY_TOKEN}"

processors:
  resource:
    attributes:
      - key: deployment.environment.name
        value: "${env:DEPLOYMENT_ENVIRONMENT_NAME}"
        action: insert
      - key: service.namespace
        value: linux-native
        action: insert
      - key: service.name
        value: opentelemetry-collector
        action: insert
  memory_limiter:
    check_interval: 5s
    limit_percentage: 80
    spike_limit_percentage: 25
  batch:
  resourcedetection:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
      resource_attributes:
        host.name:
          enabled: true
  transform:
    metric_statements:
      - context: datapoint
        statements:
          - set(datapoint.attributes["host.name"], resource.attributes["host.name"])

service:
  pipelines:
    metrics:
      receivers: [ otlp, hostmetrics, hostmetrics/disk ]
      processors: [ memory_limiter, batch, resourcedetection, transform, resource ]
      exporters: [ otlp ]
    logs:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch, resourcedetection, resource  ]
      exporters: [ otlp ]
    traces:
      receivers: [ otlp ]
      processors: [ memory_limiter, batch, resourcedetection, resource  ]
      exporters: [ otlp ]
  telemetry:
    metrics:
      level: detailed
